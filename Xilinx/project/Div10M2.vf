////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Div10M2.vf
// /___/   /\     Timestamp : 12/11/2022 14:53:50
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Xilinx/project/Div10M2.vf -w C:/Xilinx/Lab7/Div10M2.sch
//Design Name: Div10M2
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_Div10M2(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Div10M2(CLR, 
               Input_CLK, 
               Out_CLK);

    input CLR;
    input Input_CLK;
   output Out_CLK;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   
   (* HU_SET = "XLXI_1_8" *) 
   CD4CE_HXILINX_Div10M2  XLXI_1 (.C(Input_CLK), 
                                 .CE(XLXN_12), 
                                 .CLR(CLR), 
                                 .CEO(), 
                                 .Q0(), 
                                 .Q1(), 
                                 .Q2(), 
                                 .Q3(), 
                                 .TC(XLXN_2));
   (* HU_SET = "XLXI_2_9" *) 
   CD4CE_HXILINX_Div10M2  XLXI_2 (.C(XLXN_2), 
                                 .CE(XLXN_13), 
                                 .CLR(CLR), 
                                 .CEO(), 
                                 .Q0(), 
                                 .Q1(), 
                                 .Q2(), 
                                 .Q3(), 
                                 .TC(XLXN_3));
   (* HU_SET = "XLXI_3_10" *) 
   CD4CE_HXILINX_Div10M2  XLXI_3 (.C(XLXN_3), 
                                 .CE(XLXN_14), 
                                 .CLR(CLR), 
                                 .CEO(), 
                                 .Q0(), 
                                 .Q1(), 
                                 .Q2(), 
                                 .Q3(), 
                                 .TC(XLXN_4));
   (* HU_SET = "XLXI_4_11" *) 
   CD4CE_HXILINX_Div10M2  XLXI_4 (.C(XLXN_4), 
                                 .CE(XLXN_15), 
                                 .CLR(CLR), 
                                 .CEO(), 
                                 .Q0(), 
                                 .Q1(), 
                                 .Q2(), 
                                 .Q3(), 
                                 .TC(XLXN_5));
   (* HU_SET = "XLXI_5_12" *) 
   CD4CE_HXILINX_Div10M2  XLXI_5 (.C(XLXN_5), 
                                 .CE(XLXN_16), 
                                 .CLR(CLR), 
                                 .CEO(), 
                                 .Q0(), 
                                 .Q1(), 
                                 .Q2(), 
                                 .Q3(), 
                                 .TC(XLXN_6));
   (* HU_SET = "XLXI_7_14" *) 
   CD4CE_HXILINX_Div10M2  XLXI_7 (.C(XLXN_6), 
                                 .CE(XLXN_17), 
                                 .CLR(CLR), 
                                 .CEO(), 
                                 .Q0(), 
                                 .Q1(), 
                                 .Q2(), 
                                 .Q3(), 
                                 .TC(XLXN_7));
   (* HU_SET = "XLXI_8_13" *) 
   CD4CE_HXILINX_Div10M2  XLXI_8 (.C(XLXN_7), 
                                 .CE(XLXN_18), 
                                 .CLR(CLR), 
                                 .CEO(), 
                                 .Q0(), 
                                 .Q1(), 
                                 .Q2(), 
                                 .Q3(), 
                                 .TC(Out_CLK));
   VCC  XLXI_9 (.P(XLXN_12));
   VCC  XLXI_10 (.P(XLXN_13));
   VCC  XLXI_11 (.P(XLXN_14));
   VCC  XLXI_12 (.P(XLXN_15));
   VCC  XLXI_13 (.P(XLXN_16));
   VCC  XLXI_14 (.P(XLXN_17));
   VCC  XLXI_15 (.P(XLXN_18));
endmodule
